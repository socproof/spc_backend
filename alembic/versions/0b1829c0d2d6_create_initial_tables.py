"""create_initial_tables

Revision ID: 0b1829c0d2d6
Revises: 
Create Date: 2025-05-11 19:46:35.907779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b1829c0d2d6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problem_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description_template', sa.Text(), nullable=False),
    sa.Column('parameters_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('solution_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('base_cost', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('base_effects', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('worlds',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('initial_indicators', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_worlds_name'), 'worlds', ['name'], unique=False)
    op.create_table('problem_instances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('current_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('world_id', sa.UUID(), nullable=False),
    sa.Column('problem_template_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['problem_template_id'], ['problem_templates.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applied_solutions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('turn_applied', sa.Integer(), nullable=False),
    sa.Column('actual_outcome', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('world_id', sa.UUID(), nullable=False),
    sa.Column('solution_template_id', sa.UUID(), nullable=False),
    sa.Column('target_problem_instance_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['solution_template_id'], ['solution_templates.id'], ),
    sa.ForeignKeyConstraint(['target_problem_instance_id'], ['problem_instances.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem_instance_links',
    sa.Column('source_problem_id', sa.UUID(), nullable=False),
    sa.Column('linked_problem_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['linked_problem_id'], ['problem_instances.id'], ),
    sa.ForeignKeyConstraint(['source_problem_id'], ['problem_instances.id'], ),
    sa.PrimaryKeyConstraint('source_problem_id', 'linked_problem_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('problem_instance_links')
    op.drop_table('applied_solutions')
    op.drop_table('problem_instances')
    op.drop_index(op.f('ix_worlds_name'), table_name='worlds')
    op.drop_table('worlds')
    op.drop_table('solution_templates')
    op.drop_table('problem_templates')
    # ### end Alembic commands ###
